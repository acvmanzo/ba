import numpy as np
import cProfile
import pstats
import re
import time

#g = 'GCGGTTATGCACCGTTCAAATTAGCAAACCACTAAGCGACGTAGTCTGGATTGATTTCTCCCTACCAGTGACCCAAGACGCGTTAGTGAGTTAAGTTCATATCCAGTACCTGCCGCCCTCTGTACTTGGGCGTCCGATTCGCATGCTTACTCAGGTGGAGGACACGATAATCTGATTAAACTGAGCTAAACCAGGTGGAACCAGAAACCAGGTGGGGAGTCTCGCTTCAAGCCGTTCTTGCGATCAAACCAGGTGGTCCATTATGAAACCAGGTGGCTAAACCAGGTGGTCCAGATCCTCGAATGATGTCGGTGCACATCAAAACCAGGTGGGGTGGTGGAACGTAAAACCAGGTGGCATAAACCAGGTGGGCCGGTTCGTAAACCAGGTGAAACCAGGTGGGGTGGAAACCAGGTGGGTTACAAATTACGTTGAGATGGCCCAAACCAGGTGGTGGGCTTCACCCATGTCAACAAACCACCCTATGGAACTAAACCAGGTGGAACCAGGTGGTGAAGGCTTATCCTCAGGAAAAACCAGGTGGAGGTGGTGAAATAAAACCAGGTGGACCAGGTGGATAACCCTCGCCTCGCTTCTCAACCGAGACCTGGATAAACCAGGTGGGGTGGTCCACCGATTTTTGAGACACTAGAAACCAGGTGGGCGGGGAAACCAGGTGGCAAACCAGGTGGGGTGGACGGAAACCAGGTGGATATGTCATAAAACCAAACCAGGTGGTGCACCCCCATGGTGTGTCTTATCCGTGCGTATAAACCAGGTGGTCGCACGGCTTCCACTTGCTGAGAATAGGCCCGCAGGGTCAGTGCCATGCCCTCCGTCACTCGATATGTGTTGTAAGAGTGGTTACCCCTTCATTGAAGTCGCCCACAGCCCCACCTGCATTGCTAGACTATCACCCTACAGTAGGCCTTTTCGCCTTCTTCAAGCAGCAATCTCTTATCCGCGGATGGGCGCGGCGAGCGTGGCGTCCCCGAACATTTTTACCTAACGTGTTTTGTTGGCCGCAAGCCTTCCCTCTAGTCCACCTCAGCCATTCAGCCTAGTAGCTTTCAAGCCGAGCCTTCCATATCTAATGGACCGTCCAGAATTTCACACGTTTCACAGGGCTGTGTTCGACCGCCCGTAATGCTGTTTCACAGGCGATCGCCTTGCGGTTTTTTCACAGATCGCAGCCGATGGACATGCCAACTCGATTTTCACAGAGTTTTTCACAGCGGTTTCACAGCACAGCAGTGATTGTTTCACAGCAATTTTCACTTTCACAGGGGCCCTTTTCACAGCTCAGGGCTCTTTTCACTTTCACAGTTTCACAGCGCTCCTTTCACAGAGCGGGGAAATTTAAGGGAACACTCAAGGGAACAAGGGAACACACAAAGGGAACACAACACAACACATAAGGGAACACTTTCACAGAACACAAAAGTCCGAAATCATCAGCGGCGAAGGGATTTCACAGACAGACACTTTCACAGCGCATTTCACAGATACGTACTTTCACAGGCGTACTTTCACAGACTTTCACAGAGGACAAGCTCAATTTTCACAGACAGGCTGGATAAATTTCACAGCGGTAAGGGTTTCACAGCACACATAAGGGAACACGAATTTCACAGCAGGGAACACCTCTACGAGTAATCTATTACTCTACCTACTGAAGGGAACACACCGAAGACCTACTATTACCTATTACTCTTAAAGGGAACACATTACAAGGGAACACACTCTCTCGTCATATCTCACCTCTCTATTACTCTTAAGGGAACACCTTCTCGATCAACCTATTACTCTATGGAGATAGAGATATTCCAGACATATGGAGATAACATGGAGATATGGAGATAATGGAGATGGAGATAGCTCTTATATTTATCCTATGGAGATATGATACTATTAATGGAGATAATTCTAATGGAGATATAATTACTCTAAGAGGATGGGATCTCGGGCTATTACTCTAATGGAGATAAGCACTATTACTCTAGGAAATGGAGATATGTCAATGGAGATATGTAATGGAGATAGAGGGAGATGGAGTCGCCATTTCATAATCGCCATTTCATAGTTCAGGAATCGCCATTTCCGCCATTTCTAAGATGGAGTCGCCATTTCTACGTATGGAGATAGGATCGCCATTTCATACGACCCGTTGGATATCGCCATTTCCTCGCCATTTCTGGTGACATTTCTCGCCATTTCATTTCTGGAGATAGATGGATCTCGCCATTTCATAGGAATCGCCATTTCCACGTAGGGGGGGCCACAATCCGTAGGTCGGAATTCAGACTCGCCATTTCCCATCGCCATTTCTTCACCTGTATGCCGATCCCTTCGCCATTTCTCATGGAGATAACTCTCTCTCGCCATTTCTCGCCATTTCCATTTCACTCTCATTCGCCATCGCCATTTCCATTCGCCATTTCATCGCCATTTCTTCAGGATAAGATATCGCCATTTCGACTCTCATTCGCATACTGACTCTCATTCTCATCTCGCCATTTCTCATCTGACTCTCATCCTGGGGGAAACTTGCGACTCTCATCACACTTCCGTCGACTCTCATACTGGCGGATAGCATAGGAGCCATTTAAAGACTCTCATTCTCATTCGAGACTCTCATTCAAATCCTACGAGGACTCTCATATAGACTCTCATATCATTACGAGGACTCTCATATACGAGCCATGCATGTGGCGACGACTCTCATCTACGAGCCATGCAAGCAGAATCTACGAGCGACTCTCATTACGAGCCATGTGACCGTACGAGCCATGCATGCATGCCATGCTGACTCTCATCGAGTACGAGCCATGGAAGTTCTTGTTGGTTCGTAGCCCAAGAGCTGAAGTTACGAGCCTACGAGCCATGAAGTTACTTTTACGAGCCATGAAGCTTACGATACGAGCCATGCGAGCCATGCATCCGCGCTACGAGCCATGTTCCAGTACGAGCCATGTTAGTTGCTGAAGTTAAGTTTGGCGCTGAAGTTTGTACGAGCCATGTGCCCGCTGAAGTTTGTTGTACGAGCCATGCATGCTGAAGTTAATGGCTGAAGTTAGCGTTTGCGGGCAGATCCTCATTCTACGATACGAGCCATGCCATGCAGCTGAAGTTAAGTTGGGTTACGAGCCATGCGAGCCATGTGAAGTACGAGCCATGCTGGCTGAAGTTGTTTGTGCTGCTGAAGTTGCTCTTGTCTCTAGCTGAAGTTGCCAACAGGGCTGAAGCTGAAGTTTAAGCTGAAGTTGCGAGCAGGCTGAAGTTATCGGATTGGGGCTGAAGTTCAACCTCCCGTCCCCCCACACTATATTCCCGTCCCCCCCCGCGCACGCGCCGTCTCCCGTCCCCCCTATCCCGTGCGCACGCGACGCGATCCCGTCCCCCCAGAGTGCGCGCACGCGTCCCCCTTCCCGTCCCCCTCTCCCGGGCGCACGCGTCGCTCAACATTTCCGCGCACGCGTCGCGCACGCGGGCGCACGCGGGTCCCGTCCCCCCCCCTCTTCGGCGCACGCGGAATTCCCGTCGCGCACGCGTCCCGTCCCGCGCACGCGTCGCGCACGCGACTGCCCTAACCAACAGTGCGCACGCGCCGGTAACCCGGTAACCCGGTAACCGCGCACGCGGGCGCACGCGCGTAACCCGCGCACGCGCCGCGCACGCGGCCCGGTTCCCGTCCCCCCCGGTAACCCGGTAACTCCCGTCCCCCGTAACCCGGTGCGCACGCGCCCGGCGCACGCGGAGCGCACGCGCCCCCCCCGGTAATAGCGCACGCGCCCGGGCGCACGCGCCCGGTAACCCGGTAACCCGGGCGCGCGCACGCGGCGGCGCACGCGGCGCACGCGGCGCACGCG'
#k = 11
#L = 566
#t = 18

#g = 'TTCTGCTAACAGTCCGGCGACGGTCCGAATTGAGTGAGGCTGGAAATGCGCGCTACCACAGCCTGACCTCGCAACTTCTGAGCCGCGTCCTAGACGTATCTTGGCGATAGAGTGCGAGTGTCTATCACGACGTAGCGAGTACTATCATTGTTGATCGAGCGTAGCCGACCTTAGTGGTACTGTATTTTGCGTTGGTATCCTTACGCTGCAGTTCGTAACAGGAACGAGAGATATGACAGTCCCGCCCGCAAATGCTAACATAAGAGGTGTAGAGATCTGATTCGTTAGGAGTTAGTCGAGTATTCTACTATATTAGTCGAGTTTAGTCGAGTATAGTCGAGTATCTCGGAGTACAAGCCGCGTTAGTCGAGTATGGAAACTTTTAGTCGAGTATCTGGACACATTAGTCGAGTATCTTAGTCGAGTATTACTAGGCCTGTTTAACACGTCGTTAGTCGAGTATGTTCGGATGCAGCATCATCAGCATACGCCTTTAGTCGAGTATCGGCGACTTTAGTCGAGTATTCGAGTATTATCAGAACTTATTAGTCGAGTATATTAGTCGAGTATTTTAGTCGAGTATTATTAGTCGAGTATGTTATTAGTCGAGTATGTATCACAGCCTATCGCTGTAACTTATTTAGTCGAGTATTATCGCCTAGTGAATGAGCCCGAACCACGTCTTCCTAACGTTGGCACTTAGTCGAGTATTAGTCGAGTATATGTCTCAGCCGCCAACGTCCCATAAGCCTACTTAGTCGAGTATTATTAGTCGAGTATATAGGAGTTTTTATTTACTGGGAAGCGAGTTATTTACTGGGAAGTCGCTTTATTTACTGGGAAGTTCCTTGGTAAGGCAGAAGACAGACTTTACTGGGAAGAAGAAGCTTTTTACTGGGAAGTCGACGAGTAGTCTTCAGCATCCCGCGTTTTACTGGGAAGTCCGTTTACTGGTTTACTGGGAAGCTTTACTGGGAAGAAATCTTCGACGAGTCTTCGACGAGTCTTCGACGAGTCCATGCTCTTTTTACTGGGAAGCTCTTTTACTGGGAAGACTCTTCGACGAGTAATTTACTGGGAAGTTACTGGGAAGGTCTTCGACGAGTTTCTTCGACTCTTCGACGAGTTTCGACGATCTTTTACTGGGAAGTGTTTACTGGGATTTACTGGGAAGCTTTACTGGGAAGTGGGAAGCTTCGACGAGTTGGTTTTACTGGGAAGTTTACTGGGAAGAAGACTGGGAAGGGAAGTTTACTGGGAAGAGTCATCCCGGGCCGTTAAGCCTTTGGTATCTGGCTGTCTTCGACGTTTATTTACTGGGAAGTTACTTTACTGGGAAGGGAAATGGTACATTAAGAGGGCACAGATTACCGGTCTTCGACGAGTGTCTTCGACGATCTTCGACGAGTTTCGACGAGTCTCTTCGACGAGTCTGTATCCATCTCTTCGACGAGTCTTCGACGAGTGTCGGAGTGGGAACCATGCGCTTGGTATGGGGATACGGTAGGCTCTCTCACGCACAATCTTTGATCGTAATCCCAAAACTTTCCGTCTGACAATAACTCAGTTCGAAATTACCAGACCGCCGGGGAAACCTATCCGACCTATTCAACTATACTCACGTTTCACGCCAACTGACAAACAATTGTTATTTCTCTAGCGATAAGCTGGACTCAGTTCCCGTAGGTTTCTTCGCCGTAGGTTTCTGCAATCGTCCGTAGGTTTCTGAGTCTACCGTAGGTTTCTTCGCTAAAAGGGCCGTAGGTTTCTGTACACCGTCCGTAGGTTTCTTCTTGCGATCGCTCTCTGTGGTATAAGGTACTTGTCCTTTAACCCGTAGGTTTCTCCCGTAGGTTTCCCCGTAGGTTTCTGTTTCCGCCCCCCCGTAGGTTTCTCTTAGAGATGGAACTCGTCTCCGAACAACCCGGCACTCCGTAGGTTTCTGTCCGTAGGTTTCTAAGCCGTAGGTTTCCGTAGGTTTCTTACGCGGCTCCGTAGGTTTCTCATACCCGTGACGCCGCCCGTAGGTTTCTGGTTTCTCTAGGTCACGGTAGCCCGTAGGTTTCTGGTTTCTCAGCTTCGTTCGGAACCTATTTCTTCATAACTCCCGCGATAGAACGGCTCCCGTACCGTAGGTTTCTAACCGTAGGTTTCTTAGGTTTCTACCTAGAGATAAAACCCGTAGGTTTCCGTAGGTTTCTGCCAGCCGTAGGCCGTAGGTTTCTGTATTGCACCTTCTCCGTAGGCCGTAGGTTTCTAGGTTTCTGGGCTGGTATCAGAAACTACCTACTCTGATCCCCTTTGTATGTTTCGTCTCTCTTACCAGCCAGGGGTACCCTGTCGTTCGGCTAACGCGCCTTGCAATGAAAGGACCCGGTCTTATGACCATAAATCTGGCAGGAAAAGAGATTGTGTGCAGCTTCCAATCGGCGGCAATCGGCGGCATCGGCGGCAGAAGACAGATCGAACACCTATCGGCGGCAGACAGAACCCAGATCGGCGGCAGAGCAGAAGAATGACGAGTCCGTTGTTAAATCGGCGGCATCGGCGGATCGGCGGCAGACTGAGTAATCGGCGGCAGATCGGCGGCAGAATCTGATATCGGCGGCAGAAGTAGGTGGATCATCGGCGGCAGATGGACTTGTAATCGCACAAGGTCAACGCCGGCGCCTATCGGCGGCAGACACAATCGCACAAGGTCACAAGGTACTGATCGCACAAGGTAGACATCGCACAAGGTAATCGGCGGCAGACGGCGGCAGAAGCGGCAGACATCGGCGGCAGAAGGATATCGGCGGCAGACGGCAGATTAAATCGCACAAGGTGTTTTAGTTACGACTACCAGTATCGCACAAGGATCGCACAAGGATATCGGCGGCAGACGCACATCGGCGGCAGAGCATCGGCGGCAGATCGGCGGCAGAGCGGCAGAGCACAAGGTGCATCGCACAAGGTTAATCGGCGGCAGAAAGATCGGCGGCAGAGGATCGGCGGCAGATATCGCACAAGGTTATCGCACAAGGTAGTTCCCTCTCCCAAATGTGATCGCACAAGGTGCATTTCCGATCGCACAAGGTCAAGGTTTGAGTCTCATCGCACAAGGTATCGCTATCCACGACGCCTGGCTATCGCACAAGGTGAGTATTATCGCACAAGGTAAGACACGCCGAGGTGATCGCACAAGATCGCACAAGGTTTAATAGCATTACTCCATACGTCGCGCGTCTGCACATTAAATCTCACTCAGATTCGGGATCAGACTGTGTCCCCCCTGAAGAACAGCGTGCGCAAACAACCTTAGTTTATTGTTAACGGGATTGCGTATCGGTCTACCCATGTCCGTCAATGCACTGGCAAGCGGCCTCGACAACAAGGATCCGAACGTACTAGTCGTAGCACCCAGGTTCAGTCTCCACACGTTGTCAGAAGACAACACGTTGTCAGAACCCATGGGTCGGGTGGAACACGTTGTCAGGACACGACACGTTGTCAGCACGTTGTCAGCTTACACGTTGTCAGCTCAACACGTTGTCAGTCTACACGTTGTCAGGTGTTACACGTTGTCAGCTCTCAGGAACACACGTTGTCAGCACGTTGTCAGTTAGAGGCGCTGTAAACCTGATCGACACGTTGTCAGTCAGCACGATTTGAGTTACCACACGTTGTCAGCAGTCAGCGTACACGTTGTCAGGCGTTCTCGAATCGCACACGTTGTCAGATTACACACGTTGTCAGACGTTGTCAGGTTACACGTTGTACACGTTGTCAGGTACAACACGTTGTCAGCATTTGCCGAAAGCTGCGCAAGGGTTTAATCTACACGTTGTCAGGCGTATTACACGTTGTCAGGGAGTACGTTGTTAAATACACGTTGTCAGGCGGTCGCCACACGTTGTCAGTGGGGCCAACACGTTACACGTTGTCACACGTTGTCAGTGTAGGATAGACACGTTGTCAGACCGAAAACGTGCATCAACACGTTGTCAGTACAGTATTCTCACGTGGCAAGTGGTTGCCATTCTTCGCAATTGTGGGGACCATCCGTCACGCCCCAGCTGGGATCCGGATTTAAGTGGGAAGAGATAACTTCATCCGAAACTCACGTCATACTCGATATACATAATAGAGCCTAAGGGTCAACAGCAAAAGACCGGTCGTAGGTCACGGTGTACATCGCCGGTCGTAGGTCGATCTTACCCACTCGGAATACAATGTGCCCGCCCTCTTGGTTGCACGGTCGTAGGTCAGAGTACTTGTTCGGTCGTAGGTCGTCGTAGGTCGCTCTAGGGCGCCTGACGCGGTCGTAGGTCGCGAACAGTTGTGTACGACGGCGGTCGTAGGTCGTGGGATAGGTGTGTGCTTAACTAAGGGAACCGTCGCGGTCGTCGGTCGTAGGTCGTCGTAGCGGTCGTAGGTCGGTCGTCGTCGGTCGTAGGTCCAAGCGCGGTCGTAGCGGTCGTAGGTCCGGTCGTAGGTCGTCGTAGGTCTGACGGTCGTAGGTCAACGAGACGACGAGACGACCGGCCGGTCGCGGTCGTAGGTCCACACCGAGCCGTCCGGTCGTAGGTCCGTAGGTCACCGCGGTCGTAGGTCACGGTCGTAGGTCGTCGTAGCGGTCGCCGGTCGTAGGTCGTAGGTCGACCGGCCTCGACGCCGAAGAGACGACCGCGGTCGTAGGTCGTAGGTCTGCGGTCGTAGGTCGGCGAGACGACCGGCCTCCGGTCGTAGGTCTAGGTCACCGGCGAGACGACCGGCGCCCTTATGAGACGACCGGCGTAGGAGGAGACGACCGGCAAGTCTTAGGGGGGAGCGAGACGACCGGCGCGGAGACGACCGGCATGCCTTCTGAGGAGACGACCGGCCTACCGCGCCCAAGGAGACGACCGGCCGGCGACGACCGGCGGCGATCTGATGTGTTGTAGATGTAGAACGACCATGTATGTGTTGTAGAGTAGAGTGTTGTATGTGTTGTAGACACATGTGTTGTAGATTGTGCTGATGCTCGTATGTGTTGTAGAAAAACCTCGCTGAGATTCTGGGGACTGCCAGCATGTGTTGTAGAAGCCCCAAAGAGTATAATGTGTTGTAGATAGATGCCACCCGCCTAGGCTCTTTAATGTGTTGTAGAGAAACATCTTGGTTTTTTGCGATGTGTTGTAGACTTGCCAATGTGTTGTAGAAATCCCTCCTGACGCGTAAGATCAGAATGTGTTGTAGAGAATGTGTTGTAGAAGACTATGTGTTGTAGAAATGTGTTGTAGACATAAAGCTTGCCATATGTGTTGTAGAATATGGGTTGCGTGGGTTGCGGACGTTGCGGACGCGGACGTGTTACCCACCGTTGGGTTGCGGACATGTTGGGTTGCGGACACAGATGTGTTGTGGGTTGCGGACTTGTAGAATGTGTTGTAGATCTGGGTTGCGGACGTATGGGTTGCGGACGTTGTAGAGTAATGCGAGCGTGGGTTGCGGACGTTGCGGACGTTGCTGGGTTGCGGACTGGGTTGCGGACTTTGGGTGGGTTGCGGACGGTAGCTATTGAATAACAATGGAAGGCAGTGGTAATCGTGTGGGTTGCGGACAGCGAGGTATAGACTGTGGGTTGCGTGGGTTGCGGACGGTTGCGGATGGGTTGCGGACTTGCGGACCTGAGCTGGTGGAGTTGCGGTGTGGGGTGCGTAAATGGGTTTGATCGCAGTCCCGGACCTGATCGCAGTCCTCCGTCCACTCAACTGATCGCAGTCCTGATCGCTGATCGCAGTCCGCCTGATCGCATGATCGCAGTCCATCGCAGTCCTCCACGGAGATGGGTGATCGCAGTCCTCGCAGTTGATCGCAGTCCCAGTCCGATGATCGCAGTCCGTTGCGGACCGGGGGTTACTAAGATGCATTTATTGATCGCAGTGATCGCAGTCCTCTGATCGCAGTCCCTGTAACCTAAGGTACAGATCCTTGCCGAGTACCCTTAGGACGGGGATGCCTCGGGAAGATTCTCCTAATTAGCCAGGTATGAACCCTCACAGTGATCGCAGTCCCAGTCCCGCGGCTGGTGAAGTGATCGCTGATCGCAGTCCTCGCAGTCCTCGCAGTGATCGCAGTCCCAGTCCGCTTTGATCGCAGTCCGGGATTGAATGATCGCAGTCCTCGCAGTCCCCGCACCGGGAGCGCAATATGCTCGCGATGCCCGTAGTTATATTATATTGATCGCAGTCCATTAGCTGATCGCAGTCCTCCTAGTTGATCGCAGTCCACACACATGATCGCAGTCCTAATGCGTGCTGGTACGGCAACGCCCACCGACGTCTGGTAGTTATATTAAACCCAGTAAATAAAGAGCTTGATTGTAGTTATATTATATTATGTTCCACACCCGTCGCCTTGTAGTTATATTATGCGTAGTTATATTAAGTTATAGTAGTTATATTATGTAGTTATATTACGCTGAATCAGATCAGTAGTTATATTACGTAGTTATATTAAGTTAGTAGTTATATTACCGTGGTGTCCAACGCGACTACGTAGTTTCTCGGTGTAGTTATATTATGGCCGTAGGTAGTTATATTAGGTAGTGTAGTAGTTATATTATGTAGTTATATTACTCTCCGTAGTTATATTAAGGGTAGTTATATTACCGTGGGTTAAGTAGCAAAGGCCGGGTGTAGTTATATTAAGTTATATTAAATGGAGTAGAAGATGAGGACATCGCGCGGTAGTTATATTATACTCTGAATCGAAATTGTAGTCTGTTAAGGAATTGTTGCTTCATTAGGACGATTGGAAAACCCTCAGAATTCAACGAGTGCCTATAAAAGCCAGGTCCCTGCCCATGTGTTGGCTCTCATAGCGGTTGGCCTCAGTATCTCTTTCATTTGGAACTTTTCATTCATTCTGCCTGGGATGCCATTACAGTGCAACAGTGCAGCTCTTTCCCGTAATTCCCCATAGCAAACCCAACGGCTCGATTCTGCGATAGCAAGTATGTCCTAAGGACATGGACCGTGTTCATCTGATGTATTAAGCCTGTACGTCCTCTGTAGTTCGGGCTTCGTTAGGTTCACCGCATAACGAGTTTTGCACTGAGCTCATTGCCGTCTATATGGGGGATGGAGAAGCTAATTGTACGAGTGGCAGTCCATGCCCCACTATCGGTAGGGTAGGTGCATTTACTCCGGCGACGGCATGTAAATGCTGTAGGTTGCATAGATAGACAGAACTTCCATGTAGTATTCGGGCGGACCACGCGCCGCGTCTACCACATGCCCCCTCTGGTCCTTGACTAGACGTCAAATCTCTGGCACTATTGCCCCAGAGACGTTTTTCCCCTGGGCCGGAGAACAGCGACTGCCTTATTTCATTACTACTGGTACGTCAGCATCATAGGCTGCGAATAAGTTATAAAGATTGGTGCGTCGAGATTATCTATCCTTCATAAGTAGGAAAACACCAGCGTTATCAACTTTGCGGCGTGATATAGGATCCCTAAACCAACAGTGTACGCGAGGCAGACTAGCGATGGATATCGGATAGGATATCTGCCAGGATATCTGCCAAATATCTTCTTGGTACTTGAAGCCTGTGTTATTCGGATATCTGCCACCACTGGGTGGGATATCTGGGATATCTGCCAGCGCGAACCCTTAGTGGGGATAATTTAACGAGGGTCTGAGGATATCTGCCATCTCCATGACTCACTCGCTATGCGGGATATCTGCCATCAGTTGATGGATATCTGCCAATATCTGCGGATATCTGCCAAGGGATATCTGCCAACCTTCGGCGGTCACCGGATATGGATATCTGCCAATCTGCCAGGAGGACGTTCGGATATCTGCCAAAATGGGATATCTGCCACCAGATATCTGCCAGATCGAGGCTTAGACTCTCCGCGCCCAACGTTAGACTCTAGATAGACTCTCCGCCTCTCCGCGAATAGACTCTCCGCGTAGACTCTTAGACTCTCCGCTCTGGGATATCTGTAGACTCTCCGCCCGCTATCTGCCAATGGATATCTGCCAGGTTAGACTCTCCGCCTGGATTAGACTCTCCGCTATCTGCCATGCCAATGGGTTTCTGGTAGACTCTCCGCCAGTAGACTCTCCGCCTCTCCGCCTAACACAGAGACACGTAGACTCTCCGCACTCTCCGCCTAACACAGAGATTCCTAACACATAGACTCTCCGCCAGAGACTCTTAGACTCTCCGCGACTCTCCGCGACTCTCCGCGCGGGGTTAGACTCTCCGCCTCTCCGCTTTCTATTCAACCTAACACTAGACTCTCCGCAGCTAGACTCTCCGCCTAGACTCTCCGCACTCTCCGCGGTTTGGGTTTTAGACTAGACTCTCCTAGACTCTCCGCGCGGTTTCTATTCTAGACTCTCCGCAGTAGACTCTCCGCCCTAACACAGAGACAGACTAACTATAGACTCTCCGCGTTTCTATCTAACACAGAGACCTAACACCTAACACAGCTAACACAGAGATAAGGGGTTTCTAACACAGAGATCTACTAACACAGAGACATCACCCTAACACAGAGAAACCTAACACAGAGACCCTAAATCACCGCACCGCATCACTACTAACACAGAGAAATCACCGCAGCGGCTACGGTCCATGATGAGCCTAAATCACCGCATCACCGCACAATATCGGGCGTGGTCTAAATCACCGCCCTTGGGTTTTTCCGAGGGTAGTAGTTCCTGTTTCCATCCCTGAGTGATTTTGCCCAGTGCGCCATTTCAGGTTCACGTCGCCTGTCCGGCAAGAATACTATCGACAGGAATGGCTCCACGAGATGGTGGGACACTTGAATCTTTTCTCGTTCCCGCATGGTGGCGCTACATACCTGAGGTGATGCTGGGGACAAATTCTGGCGATGCTCGTACATAGTTACTGCACTTATAGATTACCGAGATTCAGGTTGTTGCCCCAACAGGCGCTGAGGGATTAGTGCGGTCCATTTGATGGCGAATTTGAGCCGTGCAGTGGGCAGGTTTGATGGTTTGATGGCTTTGATGGCGAACGAAAAATTTGATGGCGAATTTGTTTTGATGGCGAACGACACGGAGGATCATACATGTCGAACGGATTATATTCGGGCAACTTTGATGGCGAAGATATACCATTTCCGGCGACTACAGAATGGGCTTTGATGGCGAAATTGCCCCTTTGATGGCGTTTGATGGCGAACTTTGATGGCGAATACTTTTACACACGATAAAAAGTTCATCATCTCCTATATTTTGATGGCGAAAGATGGCGAAAGGCCAACATGCCCTGGCTAGGAAGAATTTGATGGCGAATTTGATGGCGAATCATGCATGCCCTGGCTCATGCCCTGGCTCATGCCCTGGCTTGCATGCCCTGGCTTTATACGCATGCCCTGGCCATGCCCTGGCTCATGCCCTGGCTATGGCGAATCATGCCCTGGCTGCTTGAAGTATTTTGATGGCGAAATCGGGCGCATGCCCTGGCTCTGGCTCGAACCATGCCCTGGCTATGCCCTGGCTATATGACGACATCATGCCCTGGCTGCGAAGCAGTTACCCATGCCCTGGCTGGCTAAGAGTCACCTTGCAGACATGCCCTGGCTTTCATGCCCTGGCTCCAGCATACATTCCACGAAAGCCACAGCCCATGCCCTGGCTCTCGGCTACATGCCCTGGCTGGCTAAAGAAATTTTTAACCCGAGCGGGCCCGCGTGACGACGGTCGACCCATGCCCTGGCTCATGCCCTGGCTGTCTCGACCCCATGCCATGCCCTGGCTATCATGCCCTGGCTGCTAATCCCACATGCCCTGGCTGTCTGGTAACCATGCCCTGGCTGACAGGTCCGGCCATGCCCTGGCTAACGGCATCATTGAGAAAGAAATTGCGAGAAGTAACATCA'
#k = 12
#L = 576
#t = 20

with open('E-coli.txt', 'r') as f:
    g = f.next()

k = 9
L = 500
t = 3

def fastclumpfinding(g, k, L, t):
    '''Same as clumpfinding.py but works faster because instead of generating 
    a dictionary, uses the regular expression method re.finditer()
    
    '''

    d = {}
        
    for n in range(len(g)):
        kmer = g[n:n+k]
        if len(kmer) < k:
            break
        wind = g[n:n+L]
        #if len(wind) < L:
            #print(len(g)-L, len(g))
            #wind = g[len(g)-L:len(g)]
        #if len(wind) < 500:
            #print(n)
        #for m in range(len(kmer)):
            #if n+m-L < -L/2:
                #i1 = 0
                #i2 = L
            #if n+m-L >= -L/2:
                #i1 = n+m-L/2
                #i2 = n+m+L/2
            #if -(n-len(g)) < L:
                #i1 = len(g)-L
                #i2 = len(g)
            #wind = g[i1:i2]
            #print(n, len(wind))
            
        inds = [o.start() for o in re.finditer('(?={0})'.format(kmer), wind)]
        
        #if kmer == 'TAGACTCTCCGC':
            #if len(inds) == t-1:
                #print(wind)
            
        if len(inds) == t:
            if kmer not in d:
                d[kmer] = 0
            d[kmer] = d[kmer]+1

    return(d.keys())
print time.time()
mers = fastclumpfinding(g, k, L, t)
ans = len(mers)
print ans
print time.time()
#cProfile.run('fastclumpfinding(g, k, L, t)', 'prof_fastclumpfinding1')
#p = pstats.Stats('prof_fastclumpfinding1')
#p.strip_dirs().sort_stats(-1).print_stats()
#p.sort_stats('cumulative').print_stats(10)
