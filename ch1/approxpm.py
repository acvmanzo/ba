import re
import numpy as np
import itertools
import math

#p = 'ATTCTGGA'
#t = 'CGCCCGAATCCAGAACGCATTCCCATATTTCGGGACCACTGGCCTCCACGGTACGGACGTCAATCAAAT'
#d = 3

#p = 'AGGTACAT'
#t = 
#'ACTTCATACAACTGACAGCGGACCCCAAGAAGGGTGTTCACTCCTGTTCACTATACCCATAGGGCGAACTTAAAGAGGACGTGATTGAGAACATCTCGACGTGCGATGACCTACTAACTGTCAGGAGCATCAATCACGTTGAAACCAAGGCCCTCGCTAATTATGCATTAGCATTAACTCTCACGAACACACGCGGTTGGCTCTCCCGGGAGTCCGCCAGAGGATGACCAGCTGGGACGCACGTGGTCAGGGTGAAGACCGCTGTTACGACATCAGCACTCATGTGTGGTGGCAAGCTACTGACTTTGAGCACGCCAAGACAGTACTGTCGAGGGTACACGAGCAATAGATCACAGCCTAATCGGGGTATTGGGAAATATTTTTAATAGTTGGGCAGGAGGTCTGGGGGGTCACATTATGCGAGAGCGTGCCGTATGAATATATAGGAAAATAGTTGCTAGGAGGCATTGCCAGGTCTAACCCGCTACCAACTCAGGTACTGCAACATCAGGCGGGAAGGCGAGTCGGGTTAATTTGCGGCATACGAGTACAATCTTATGATTCGCAACCTAATGCTTGTGAGCATGGCTTTATTCCGAAGGCGGCCGGAGGTCGAGCCGCCACGGTAAGCGGACCTACAACAGATTACCTTACCAGCTTGATATTGGCGACATAGACCACTGAGGGATAGCAGCTTTGTGCCTGCGATGTACTCACTGTGCGCCAGGAAACTAAATCTTATTACCCCCTTGTCTCTGAACACGAATGACGAGATTGGGATAGGACACAAGTAGTGTGGCGTGTAGGTCACGCCATATGTGCACACACTTGATCCAAGCCCAAAACTCCGAATGCTGAATAATGACACGTCGATGTTTCCCCTACCGAAATTACAGGGGGTGCCCTTCTCAATAGGGCCGACTGGACGCTGTCCCGCAGATTGTTTTAGTCCATTAACGTGGTGATGCTGCTACTAAACCAAACATTAACTACGGCGGCGGGAAATGCGCCTTAATTTAATCGAGGGCCGGCTGGGTTATCGAGTTTTACGGCTAGCTACGCGTGTGATCTCCCCCCGGTCCTGATTACCAGAGTCGCGTTCAATCCCAACCAGCTAAAGAGCGGAACACAAGTCGAATTGAGTGATGCAATGGGCTCGCAGCGTCCCATGGGGGTAGGTCCTCCCCCCGGTAAAACCCGCTCTTAATGTCCTGTCGCAGAATCCCCTAACTAAGGGACACAGCGCCGCTAACTTGGTCCTAACACAAGCAGATATCAGCTTAGCCTGCCTAATTGTGTTCAAGCCCTCAATCTGCACATGGGCAAAGGAATACGACCCTCAAATCTCTTTGGCTCACTATAGTGACTGCTCTTAAACCCCTGGCATCTCTATTTCAATGGCGAATCGAAAAGTCGCGCGCTAATCCTGAGAGACAGTTACAAATCTCCATCACACCGGCCGTCGCTCGCTCGATTTCTGCCACCGTCGTGTCATCTCGCCTTACCAGCACCCAAAGGGAAGACCGCAAGTGATATTAGGACAACGTTCATTCACATGCGGACTATATGCTGCTGGCCATCATTGAGCGGCCGGTATTAGCCCAAGCGGTCGCAGTCGATGTTGAACCACAGAAGGCATGTGTCTAATTTCCGGGGCGTATCGGGTTATTCTGCTCGTTTAGGAGCCGTTCGCGCCAGGACCGTAAGGGAACTTGGAATTTACGTGCGCCTCTTAGTCCGGTCCAACCGCGCGTGATATAGGTGCAAGTAAGTACAACCGCAATTGATTCACTCTTACCTCCGGACGGAAGCGACGGCTCACTTTCGGGATCAGTTTTGTCTCACTACGACTGATCGAAGGGTCTTAGGTCGGTATCGTTAATATCACGCAGACGTCAGTGAACCAGTACCACGAGGTAGCAAGGTAAATGCCATAGCTGGCACATCGGACCAGCTTTGTCCGAAACCGTTCTAGAAACGTGAAGCTCCCATGTCCGCTCAAGCTTATAGTTTTTTTAATGACATAAAGTGCCCGACGTCCACTCACGAATTGCGCAGACTTGGCCCACTCGGGAGACCTATAAATGAAACCAGATAGTCTCTAGTATCGGTTCACATGAGTAGGTACTGGAGGATTGATTTTATATTATAGTAGGGTCCTTTGATCGTGGTATAGAGCCGAGCATTTTCATCTAAAAAGCTATCTAAGCGGATCTGCCCATACGCGCTACTGGTGGCCTACGGAGATCAACCCCTTTTGGACGCAGCGTGAGCCATTAAACTAGCGATATGTGAACATCTCCCTTAGGGAGGGCGCCACGTTGTAGTTGGGGTCGGCCATCGCGATTATGAGGGCGAAGTGTGACTTGAGTTCGTCACGCGCAAAACCACAACCTCCGTTAGTCTCATGTTTCGACTACGGCCAAACGTTAGGTACAGCGATCTTAACCCTCTCAAAGTTGAAACACGCGCCTAGGCTGGTGGCTAAAACTAGCTGGATTCAGCTTGACCGCAGGACGGGCCGGAAGAGACGTTGCGTGATTACATTGGAACTTAGGTCAAATTTGACGCCTATCCCCAATCAAACCATATAATGTACGGTGGTTATAATGCTGGCCAATGAGCAAGCCAGCTAGACATTGTGTTGATGTGCCAATTGTAAGAATTCATCTATCGGCAACGGTCAATACCTTTCTTCATGGACTTGTTATCATGTAGAACCAGCGAAGGCACCTTACAAATTCGCCCGATGACTAGCTACTGCGTTCCCAAAACGACAGCAATTTCTATAGGCGGTACCCACGTCGCTTAAGAAGGCTGCACTCCCCCCCCCAAGCATTTACCACCGAGAACTAAAATCGCCTTATTCAGTGCACCGGCCGCACGAACCAATACAGTACCCTGTGTTTCGTGACTGAGACAGTGACACCTCTCGGGTGTAATTCGAGCTCAAGGTAGGTGTTTGTGGAGCTTCGACCGGTTATGATGCGCGAGTTGGGGCTCACTCACGGTTGATAAGCGCACAGGTACTGCACCTCGCCATCATGTCGTACCGTGGTCATTCCTAGGCAGTCGGACACTGAGGTTTTGCACCATCGCTCACTGAAATTCTACACTCGTACTCACTCAGCGCTGTTCATGTCCGGCCCTTCTGCCCAATGTTATCAGGCCACCTGAAAACTGGCTCGACAAGGCATGATATTAGGGATAACGGCTGCGACAACGCATCGGAAGACACCCTTCCTATTTAAGTAAAGGACGGTCTCTGGCGTCATTGTAGTGGAGATAATCAACCAAGGACGTTCTATGTGTAGCACGCAATTGGGCCATACCAACCGAATATTAGGACAATGCTATGCTTTAGTTACCTAGGTACGCATCTGCCTCTGCTGGTTCGCCACCCAGCCATTTAGTTTGAGGCGTTCGGTGTTACACTATCACTCTACGACCGTCACTTGAGCTATTGGGCGTGTCATACTGAATCTTTATACCGACGGCTGTAAGTGTATGGATACATGATCCCGGGTTACAATTCGAACCTTCCATCGGCTTAGCGTTGATATTTGGCAGTATCTTGGATTTGACCAGGCGTCTCCCGTTTAGGGAGGTCGTATTTAAATTCCATTTGCAGTAAAGCTTATTGTAACTTTTGTACCGGGGTAAATAGAGGCGGGTGTCCGCGAAGACTTCCCAGTAAAGCTCCAATCCAACTATCCCGAAGGCGAGTTTGTCGGTACCTATTCGAGGCCGCGGTTTCCAACACGCAGTGACAACCTGGAATTTTCATATCGAACCGAGATGCTGAACAAGGTGCGTACTGGTGTACAGAACCTGCTCTTGCAGCACCCCCTCAGGACGCCGGTAAATCGTTATGGCTTCCTGCACACCCTAGGAGGTCAATCTTAAAGCCTTGCGAAGGTCATAGGAGGAGTGAGTTCGCCATATGGCGCCCCAAGGTAAGCGCCGAAGCCTGGCGTATAGTGACGATTGGCACAGAAATCCCTTGCAGTAGTGCCCGAAAGGTAACTGCGGTACGTGTTTAGACCATACGAAACGGATTTGTGGGGAGTCGCAATAATAGCCGGGAGCTTTCCATAAGGTCCTATACACGGCGAAGACGCAATTGGCTGATAGTCAAGGTTTAGTTCCTAATCAATTCATATGGCCGCTTGCGTATTACAAACCAGGTGCCCCAAGGAGTTCGCGGGCCGCACCCTCGGCCGTCATTCGGCATGTTGGGAAGGTCGTGGGAGGGTCGATCGGTCCTGCCGTAGCGTAGAATAGTACGAGAGTAATAGTGAGTCAGCACAAGGTTTCGCCGACTTGGACCCATACGGTAATGATTACCCCAGTATCGCAGACCAGGTCTGAATCCGAGGTTTCCAGTCAGCAACATTTAGGATGGGAAAGTGGAGTGTAACCATGTGGAACTGAGACTCTAGAAACATAGGCATGGTCAACGAAATCGGTATCGGGTTCACACCGCTTTACAAACGTGACCGAGGTATGCAGAGCCTGCTCTCGAACGGAAAGTACAAGTGTAAAGGTAGACTCACTGATGAGCTTCATTGGACGATCTCGTAATGTCAACGGTGGGTCAGGTGAGCTAGCAAATGCCGCAGGGGGTTCGCTGTCCGATTAACAATTTCCAATTGGTGCCAGATGTGTCCGCCTCAGTGTACCTCGAAAGCCCATTCTATTGTGAGGTAAGTTCCTATGTGTCGCTGCGGACTGAAGGAACCAAAAATAACCGGGGTTTCCCTGTACATTTCCTAACAGCGAGGTATGGTAAATCAGTATGTCGTGCATATGTGTCTGATTGGGACGTTATATTTCTGTACACTAGTTAATATCTCCACTTTCCCAGTCAACTATTCTCGCGTCACACTAACAGTGGAAGACCCCGATACAGGGCGGCGACGCGTCTTTAACACCTGTGATCGGGATTCGAAACTGGGCCAACACATAGCGCATAATGGTACAGTGTATGTTCATAGGTGCGCGCGTCGGTGTGCCGGAAGAGGATGCCTGGAGCCGCGACTAGGTAGAGCAGGTGCCGTTACAGCACACCCTGCTAAACTCGCTGTATTGCTCTTGAATAAAGCTAACGATACCTCATATTTCGAGTGGAGTTATGTATCCCTCCAAGTGATGTTCGCTCACGTACGGAACCCGGCCAGGGGCATATAGTCCTACCCCGACTCCATAATATTGACCGCAGTGCTGCTCTACTCGTGGATGCTTTAAACATGGGGTTATACCTTTCGCGGCTTGCTTTTTCCGAACTTGCACTCAACTGAATTACTATGAAAGGAACAGCTGACTCAATCATTAGAAGTGTGCTGTTATGGGTACGGTTACAGTCAACCTCATTTCATCTGTTCTATATACTGTGCGGGGGCCTGGCACAGCGGTCAAACAGCCCCTTATTTGCCGGGTACTGGTGTGTCGGGCGACTAAAGAAAAGCACCGATGATGGACATCTGTGTTTTTTGACTGCGGACTAGTTATGAGTTCAAGATTAATATGACCCGCATTATCAGCCGTGGCTTAGCGTCCTGGTTAGTGAAACACATTGCTAGCCATCCTCCGATTTTCACTCCGAATGTTTGAGGAGCGCTCTCGACTTAGGTCATGGATCCAAAACAGTCGATTGAAGCCTCGCACATTCAAGCATAACGATGGCATGTATTGATGATGCACTCTGACTATTCAACGCGCCGCTGATACCATCGTTAATTCAGTTAATTTAGATAGAATGTGTCGACGTCGACACCTCTATTTGCATGGTGGTGGGGTAGGTTAAAGATTTGCCAATGCCAGAAGCATCACCCACCCTGAAGCCTACTCGCGCACAGTTGTAATGGTATGCCCGATGACCTCCTATTCGTAATCTGAATCGAATCAAGTTCCAAGTTCGTGCTGGATAGTAGGAGGTCTGCAACGCTCCGCTCGGTTTTCAGGCGCTTTTCCGAATCCCTGAACTCCCCGACAGTCGATGCGTAATTATCGTCCTTTCTCATCTCAAGAGTATTGCTAATCCTGAAATTCGTTACTTGTTCTTCTGCTCGTTCCTCGATTCGCTTCGACGTTGATGGTCGTCATGGTCACTGGAATGGGTGGGACTGCATTATTCGGGTACATTAGAGTCGCAGTAGCTAACGAGATGCATTGAGAGCTATACAGGCCAGTGGACGTCTCCCTGCCGTGTCCATAGTATGACGATCAATGGTGGGCGCTACACTTGGCCCTTACTCCGTCCGCGACATACTTACTGGGTCTTACTTCACCTTTTGCTGTTTGTATCAGCACTGTCAGAGGAAAGCACGAACCACCAGTCGGCGTGTGCACGAGTTTCCAACTACTAACCATGTGCCGGATAAAGATTCAATTGAGCGCCTAGCCCCATCATAGTCCCCGAGTATACCCATAGTTAGCGTTATGTTCATGAGTGGTGTGAATATCGTTGCGTTTTTGCGTGGAGTTGCGGATAGCCCCACATAAGATGTGTTCTTTTTTCGCCTAGGCCCGATCGTTCTGCGTGGGTAGAATTTGCTTAAACGGACGCTGAGGACACATATTGCGAAATGAGTCCAGGTATGCGCGTCTGGGTGCCACTACAAGGTACGTTCTATTAGTACGCACTTAGGCTTCTCAATCAAGGGTAACGTGCTTATGCTAGACGGCGGTAGGCTTACCTAGACTCCCACGTCTACAAATGGTAGAATGAAGCGGCCGGATAGTAGGCATAGGCGGAGCGCGTATTCTGTAATTCGCACATTAGATCCCCGACACTGTTAACGTCGTGTAACGGTCAAGGGGTTGATTACCGATCATCGTCGTTTGAACGCAGCTTAGTCACGAGAACGCGTCCCTCACGTACTAAGGATAGACTTCGCTGGAGCTGGCTGATACAAGAGAATTAGCCCTTCCTTGTGATAGGTACAT'
#d = 5

t = 'CACAGTAGGCGCCGGCACACACAGCCCCGGGCCCCGGGCCGCCCCGGGCCGGCGGCCGCCGGCGCCGGCACACCGGCACAGCCGTACCGGCACAGTAGTACCGGCCGGCCGGCACACCGGCACACCGGGTACACACCGGGGCGCACACACAGGCGGGCGCCGGGCCCCGGGCCGTACCGGGCCGCCGGCGGCCCACAGGCGCCGGCACAGTACCGGCACACACAGTAGCCCACACACAGGCGGGCGGTAGCCGGCGCACACACACACAGTAGGCGCACAGCCGCCCACACACACCGGCCGGCCGGCACAGGCGGGCGGGCGCACACACACCGGCACAGTAGTAGGCGGCCGGCGCACAGCC'
k = 10
d = 2

#with open('dataset_8_3.txt', 'r') as f:
    #p = f.next().rstrip('\n')
    ##print(len(p))
    ##for i in p:
        ##print(i)
    #t = f.next().rstrip('\n')
    #d = int(f.next().rstrip('\n'))
    ##f.next()
    ##ansstr = f.next()

#p = 'AAAAA'
#t = 'AACAAGCTGATAAACATTTAAAGAG'
#d = 2

#ans = [int(x) for x in ansstr.strip('\n').split(' ')]
#t = t[:20]

#print 'p', p
#print 't', t
#print 'd', d
#print ans

#for n in range(len(p)):
    #s = re.compile(
#p = re.compile('ab*')

#test = t[6:14]
#print test
#s = re.compile('AATCCA[\w][\w]')
#res = s.search(t)
#print res.start()

#isets = itertools.combinations(range(len(p)), d)
#for iset in isets:
    

#check that number of sets matches n choose k
#x = 0
#for i in sets:
    #print i
    #x = x+1
#print x

#print math.factorial(len(p))/(math.factorial(d)*math.factorial((len(p)-d)))

def approxpm(p, t, d):
    indices = []

    for n in range(len(t)):
        #print ('n', n)
        window = t[n:n+len(p)]
        #print(window)
        #print(p)
        #print('wind', len(window))
        if len(window) < len(p):
            #print(len(window), len(p))
            break
        counter = 0
        for o in range(len(p)):
            ##print('o', o)
            if p[o] != window[o]:
                counter = counter+1
            if counter > d:
                break
        if counter <= d:
            indices.append(n)
        #print('counter', counter)
        
    return indices
    
    
#p = 'GCACACAGAC'
#p = 'GCGCACACAC'
p = 'GCACACACAC'

myans = approxpm(p, t, d)
#print myans[0:5]
#print myans == ans
#print myans
#with open('approxpmans.txt', 'w') as g:
    #for x in myans:
        #print x
        #g.write('{0} '.format(x))

print len(myans)
